*****vectorization******

f= w1x1+w2x2.....wnxn + b
can be implemented as dot prodcut of w and x
f=w.x+b
dot prduct is nothing but sum of product of corresponding numbes in each vectors.

this is much more efficent to implement and can be implemented in parellal with help of GPUs
or else we have to implement it using for loops which is much slower. like below

for j in range(0 to 16 features):
 f= f w[j]*x[j]

How Vectorization is faster?
multiplication of numbers can be performed in parellel and laters summed up in a single step.
Hence it scales well with large dataset

Where as for loop does acummulated sum, where in every loop iteration gthe accumulated count gets
updated

*******Scaling of variables***********

How does scaling impact ?

f= w1x1 + w2x2 + b

if x1 range from 1-6 (like number of bedrooms)
and x2 range from 200-3000 (like size of the house)

then upon learning the weights of x2 would be relative much smaller than weights of x1 inorder to arrive at the right output value.
This impacts the gradient decent as below

If we plot a contoure plot wrt these variables. We will see an oval shaped area which has a huge height and very narrow width.
as height is resultant of ranges in x2 and width in small range in x1.
which means a small change in x1 result in a large change in f (or even the cost function) where as a small change in x2
provides very little change to f(or the cost function) , which means slope of the curve wrt x2 is very gradual when compared
to x1. As a result while running gradient dec(decent it will take a long time to reach the minima as the next steps keep on jumping
back and forth before reaching the minima(because if slope of x1 is large it can result in overshooting).
This will make GD to run slowly

techniques to scale

mean normalization --> (x- Mean)/max-min
Z normalization -->  (x- Mean)/ Sigma(SD)

generally , features should scale somewhere around -1 to 1 or even -3 to +3 is also fine
If a features is naturaaly lying beftween these values , it might not need scaling, although no harm in in scaling
like -100 to 100 or -.0001 to 0.00001 would need to be rescaling
